
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'castor4bit/inside-motion.vim'

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'

[[plugins]]
repo = 'haya14busa/incsearch.vim'
hook_add = '''
  let g:incsearch#auto_nohlsearch = 0

  map /  <Plug>(incsearch-forward)
  map ?  <Plug>(incsearch-backward)
  map g/ <Plug>(incsearch-stay)
  map n  <Plug>(incsearch-nohl-n)
  map N  <Plug>(incsearch-nohl-N)
  map *  <Plug>(incsearch-nohl-*)
  map #  <Plug>(incsearch-nohl-#)
  map g* <Plug>(incsearch-nohl-g*)
  map g# <Plug>(incsearch-nohl-g#)
'''

[[plugins]]
repo = 'kana/vim-tabpagecd'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'mattn/sonictemplate-vim'
hook_add = '''
  let g:sonictemplate_key = "\<Plug>(sonictemplate-select)"
  let g:sonictemplate_intelligent_key = "\<Plug>(sonictemplate-select-intelligent)"
'''

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
  let g:anzu_enable_CursorHold_AnzuUpdateSearchStatus = 1
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
  let g:NERDSpaceDelims = 1
  let g:NERDShutUp = 1
'''

[[plugins]]
repo = 'scrooloose/syntastic'
hook_add = '''
  let g:syntastic_mode_map = {
        \ 'mode': 'passive',
        \ 'active_filetypes':  ['php', 'ruby', 'javascript', 'go', 'css', 'scss'],
        \ 'passive_filetypes': []
        \}
  let g:syntastic_javascript_checkers = ['eslint']
  let g:syntastic_go_checkers = ['go', 'golint']
  let g:syntastic_ruby_checkers = ['rubocop']
  let g:syntastic_css_checkers = ['stylelint']
  let g:syntastic_scss_checkers = ['stylelint']
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
hook_add = '''
  let g:unite_enable_start_insert=1
  let g:unite_enable_ignore_case=1
  let g:unite_enable_smart_case=1
  let g:unite_source_grep_command='pt'
  let g:unite_source_grep_default_opts='--nocolor --nogroup -S'
  let g:unite_source_grep_recursive_opt=''
  let g:unite_source_grep_encoding='utf-8'
  nnoremap <silent> ,uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
  nnoremap <silent> ,ur :<C-u>Unite -buffer-name=register register<CR>
  nnoremap <silent> ,ub :<C-u>Unite buffer<CR>
  nnoremap <silent> ,uu :<C-u>Unite buffer file_mru<CR>
  nnoremap <silent> ,ua :<C-u>UniteWithBufferDir -buffer-name=files buffer file_mru bookmark file<CR>
  nnoremap <silent> ,up :<C-u>Unite -buffer-name=files file_rec/async:!<CR>
  nnoremap <silent> ,uo :<C-u>Unite outline<CR>
  augroup vimrc_unite
    autocmd!
    autocmd FileType unite nnoremap <silent> <buffer> <ESC><ESC> :q<CR>
    autocmd FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>:q<CR>
  augroup END

  call unite#custom#source('grep', 'max_candidates', 200)
'''

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
hook_add = '''
  let g:vimfiler_as_default_explorer = 1
  let g:vimfiler_safe_mode_by_default = 0
  let g:vimfiler_restore_alternate_file = 0
  nnoremap <silent> ,vf :<C-u>VimFilerBufferDir -split -simple -winwidth=30 -force-quit<CR>
  nnoremap <silent> ,vp :<C-u>VimFiler -project -split -simple -winwidth=30 -force-quit<CR>
'''
hook_source = '''
  augroup vimrc_vimfiler
    autocmd!
    autocmd FileType vimfiler setlocal nobuflisted
    autocmd FileType vimfiler nmap <silent> <buffer> <ESC><ESC> Q
    autocmd FileType vimfiler nmap <silent> <buffer> <expr><CR> vimfiler#smart_cursor_map("\<Plug>(vimfiler_expand_tree)", "\<Plug>(vimfiler_edit_file)")
  augroup END
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if has('win32')
    let cmd = 'tools\\update-dll-mingw'
  elseif has('win32unix')
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'terryma/vim-expand-region'

[[plugins]]
repo = 'thinca/vim-ref'
hook_add = '''
  let g:ref_use_vimproc = 1
  let g:ref_phpmanual_path = $HOME ."/Documents/refs/php-chunked-xhtml"
  let g:ref_source_webdict_sites = {
        \   'alc': {
        \     'url': 'http://eow.alc.co.jp/search?q=%s',
        \   },
        \   'wikipedia': {
        \     'url': 'http://ja.wikipedia.org/wiki/%s',
        \   },
        \ }
  function! g:ref_source_webdict_sites.alc.filter(output)
    return join(split(a:output, "\n")[42 :], "\n")
  endfunction
  function! g:ref_source_webdict_sites.wikipedia.filter(output)
    return join(split(a:output, "\n")[17 :], "\n")
  endfunction
  nnoremap ,rr :<C-u>Ref refe<Space>
  nnoremap ,rp :<C-u>Ref phpmanual<Space>
  nnoremap ,ra :<C-u>Ref webdict alc<Space>
  nnoremap ,rw :<C-u>Ref webdict wikipedia<Space>
  augroup vimrc_refvim
    autocmd!
    autocmd FileType ref nnoremap <silent> <buffer> <ESC><ESC> :q<CR>
  augroup END
'''

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'vim-scripts/buftabs'
hook_add = '''
  let g:buftabs_only_basename = 1
  let g:buftabs_in_statusline = 1
  let g:buftabs_active_highlight_group = "Visual"

  nnoremap <Space>   :bnext<CR>
  nnoremap <S-Space> :bprev<CR>
'''

[[plugins]]
repo = 'vim-scripts/wombat256.vim'
hook_add = '''
  set t_Co=256
  autocmd MyAutoCmd VimEnter * colorscheme wombat256mod
  autocmd MyAutoCmd VimEnter,ColorScheme * hi Normal     ctermbg=232
  autocmd MyAutoCmd VimEnter,ColorScheme * hi ModeMsg    ctermfg=111
  autocmd MyAutoCmd VimEnter,ColorScheme * hi CursorLine ctermbg=none ctermfg=none cterm=underline
  autocmd MyAutoCmd VimEnter,ColorScheme * hi MatchParen ctermbg=none
'''

[[plugins]]
repo = 'vim-scripts/yanktmp.vim'
hook_add = '''
  map <silent> sy :call YanktmpYank()<CR>
  map <silent> sp :call YanktmpPaste_p()<CR>
  map <silent> sP :call YanktmpPaste_P()<CR>
'''
